name: üöÄ Deploy to Wix Production

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'wix/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  WIX_SITE_ID: ${{ secrets.WIX_SITE_ID }}

jobs:
  quality-checks:
    name: ‚úÖ Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Install dependencies
        run: npm ci
        
      - name: üé® Lint JavaScript
        run: npm run lint
        continue-on-error: true
        
      - name: üß™ Run tests
        run: npm test
        continue-on-error: true
        
      - name: üîç TypeScript check
        run: npm run type-check
        continue-on-error: true

  lighthouse-audit:
    name: üî¶ Lighthouse Performance
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üèÉ Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://www.terasystems.ai
            https://www.terasystems.ai/research
            https://www.terasystems.ai/healthcare
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: üìä Performance Report
        run: |
          echo "### üéØ Lighthouse Scores" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Performance, Accessibility, SEO audited!" >> $GITHUB_STEP_SUMMARY

  deploy-to-wix:
    name: üåê Deploy to Wix
    runs-on: ubuntu-latest
    needs: [quality-checks, lighthouse-audit]
    environment:
      name: production
      url: https://www.terasystems.ai
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: üì¶ Install Wix CLI
        run: npm install -g @wix/cli
        
      - name: üîê Authenticate Wix
        env:
          WIX_API_KEY: ${{ secrets.WIX_API_KEY }}
          WIX_API_SECRET: ${{ secrets.WIX_API_SECRET }}
        run: |
          wix login --api-key $WIX_API_KEY --api-secret $WIX_API_SECRET
          
      - name: üöÄ Deploy to Production
        env:
          WIX_API_KEY: ${{ secrets.WIX_API_KEY }}
        run: |
          echo "üöÄ Deploying to Wix Production..."
          wix deploy --site-id ${{ env.WIX_SITE_ID }} --env production
          echo "‚úÖ Deployment successful!"
          
      - name: üßπ Clear CDN Cache
        run: |
          wix cache clear --site-id ${{ env.WIX_SITE_ID }}
          echo "‚úÖ CDN cache cleared!"
          
      - name: üìù Deployment Summary
        run: |
          echo "### üéâ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Site**: https://www.terasystems.ai" >> $GITHUB_STEP_SUMMARY
          echo "**Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Quality checks passed" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Lighthouse audit completed" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Deployed to production" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ CDN cache cleared" >> $GITHUB_STEP_SUMMARY

  notify-team:
    name: üì¢ Notify Team
    runs-on: ubuntu-latest
    needs: deploy-to-wix
    if: always()
    steps:
      - name: üí¨ Send Slack notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "üöÄ TeraSystemsAI Deployment",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*üöÄ TeraSystemsAI Deployment*\n${{ needs.deploy-to-wix.result == 'success' && '‚úÖ *SUCCESS*' || '‚ùå *FAILED*' }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commit*\n<${{ github.event.head_commit.url }}|${{ github.event.head_commit.message }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Site*\n<https://www.terasystems.ai|terasystems.ai>"
                    }
                  ]
                }
              ]
            }
        continue-on-error: true

  post-deployment-tests:
    name: üß™ Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy-to-wix
    steps:
      - name: üåê Test homepage
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" https://www.terasystems.ai)
          if [ $STATUS -eq 200 ]; then
            echo "‚úÖ Homepage is live!"
          else
            echo "‚ùå Homepage returned $STATUS"
            exit 1
          fi
          
      - name: üî¨ Test research page
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" https://www.terasystems.ai/research)
          if [ $STATUS -eq 200 ]; then
            echo "‚úÖ Research page is live!"
          else
            echo "‚ùå Research page returned $STATUS"
            exit 1
          fi
          
      - name: üìä Final Report
        run: |
          echo "### üéØ Post-Deployment Tests" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ All endpoints responding correctly!" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Site is live and healthy!" >> $GITHUB_STEP_SUMMARY
